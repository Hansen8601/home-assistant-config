- id: doors_check_status
  alias: Alert for open doors when mode changes
  trigger:
  - platform: state
    entity_id: input_select.automation_mode
    to: Sleeping
  - platform: state
    entity_id: input_select.automation_mode
    to: Away
  condition:
    condition: and
    conditions:
    - condition: state
      entity_id: input_boolean.text_alerts
      state: 'on'
    - condition: or
      conditions:
      - condition: state
        entity_id: sensor.garage_service_door
        state: open
      - condition: state
        entity_id: cover.garage_right
        state: open
      - condition: state
        entity_id: cover.garage_left
        state: open
  action:
    service: notify.twilio_sms
    data:
      message: Sleep or Away mode set but doors still open!
      target: 6082352167
- id: doors_open_status
  alias: Alert for open doors when sleeping or away
  trigger:
  - platform: state
    entity_id: sensor.garage_service_door
    to: open
  - platform: state
    entity_id: cover.garage_door_right
    to: open
  - platform: state
    entity_id: cover.garage_door_left
    to: open
  condition:
    condition: and
    conditions:
    - condition: state
      entity_id: input_boolean.text_alerts
      state: 'on'
    - condition: or
      conditions:
      - condition: state
        entity_id: input_select.automation_mode
        state: Sleeping
      - condition: state
        entity_id: input_select.automation_mode
        state: Away
  action:
    service: notify.twilio_sms
    data:
      message: Door opened while mode was sleeping or away
      target: 6082352167
- id: automation_mode_home_from_harmony
  alias: Automation Mode set to home from activity with Harmony Remote
  trigger:
  - entity_id: remote.living_room
    platform: state
  condition:
  - condition: and
    conditions:
    - condition: template
      value_template: '{{states.input_select.automation_mode.state != ''No Automation''
        }}'
    - condition: template
      value_template: '{{ trigger.to_state.attributes.current_activity != ''PowerOff''
        }}'
    - condition: template
      value_template: '{{ states.input_select.automation_mode.state != ''Home'' }}'
  action:
  - data:
      entity_id: input_select.automation_mode
      option: Home
    service: input_select.select_option
- id: automation_mode_sleeping_from_harmony
  alias: Automation Mode set to sleeping from activity with Harmony Remote
  trigger:
  - entity_id: remote.living_room
    platform: state
  condition:
  - condition: and
    conditions:
    - condition: template
      value_template: '{{states.input_select.automation_mode.state != ''No Automation''
        }}'
    - condition: template
      value_template: '{{trigger.to_state.attributes.current_activity == ''PowerOff''
        }}'
    - condition: template
      value_template: '{{states.binary_sensor.presence_nikki.state == ''on'' or states.binary_sensor.presence_phil.state
        == ''on'' }}'
    - after: '20:00:00'
      condition: time
  action:
  - data:
      entity_id: input_select.automation_mode
      option: Sleeping
    service: input_select.select_option
  initial_state: 'on'
- id: automation_mode_home_from_homekit
  alias: Automation Mode set to home from Apple Homekit
  trigger:
  - entity_id: input_boolean.set_mode_home
    platform: state
    to: 'on'
  condition:
  - condition: and
    conditions:
      condition: template
      value_template: '{{states.input_select.automation_mode.state != ''No Automation''}}'
  action:
  - data:
      entity_id: input_select.automation_mode
      option: Home
    service: input_select.select_option
  - delay: 00:00:02
  - data:
      entity_id: input_boolean.set_mode_home
    service: input_boolean.turn_off
- id: automation_mode_sleeping_from_homekit
  alias: Automation Mode set to sleeping from Apple Homekit
  trigger:
  - entity_id: input_boolean.set_mode_sleeping
    platform: state
    to: 'on'
  condition: []
  action:
  - data:
      entity_id: input_select.automation_mode
      option: Sleeping
    service: input_select.select_option
  - delay: 00:00:02
  - data:
      entity_id: input_boolean.set_mode_sleeping
    service: input_boolean.turn_off
- id: automation_mode_away_from_homekit
  alias: Input Boolean Set away from Im leaving
  trigger:
  - entity_id: input_boolean.set_mode_away
    platform: state
    to: 'on'
  condition: []
  action:
  - data:
      entity_id: input_select.automation_mode
      option: Away
    service: input_select.select_option
  - delay: 00:00:02
  - data:
      entity_id: input_boolean.set_mode_away
    service: input_boolean.turn_off
- id: automation_mode_home_from_ecobee
  alias: Automation Mode set to home from Main Floor Occupancy (Ecobee)
  trigger:
  - entity_id: binary_sensor.main_floor_occupancy
    platform: state
    to: 'on'
  condition:
  - condition: and
    conditions:
    - condition: template
      value_template: '{{states.input_select.automation_mode.state != ''No Automation''
        }}'
    - condition: template
      value_template: '{{states.input_select.automation_mode.state == ''Sleeping''
        }}'
    - after: 06:00:00
      before: '20:00:00'
      condition: time
  action:
  - data:
      entity_id: input_select.automation_mode
      option: Home
    service: input_select.select_option
- id: automation_mode_sleeping
  alias: Automation Mode actions when set to sleep
  trigger:
  - entity_id: input_select.automation_mode
    platform: state
    to: Sleeping
  condition: []
  action:
  - data:
      entity_id:
      - group.room_living
      - group.room_kitchen
      - light.master_bathroom_chandelier
    service: light.turn_off
  - data:
      entity_id: fan.living_room_fan
    entity_id: fan.living_room_fan
    service: fan.turn_off
  - data:
      entity_id: remote.living_room
    entity_id: remote.living_room
    service: remote.turn_off
  - data:
      entity_id: scene.basement_lights_off
    service: scene.turn_on
- id: automation_mode_away
  alias: Automation Mode actions when set to away
  trigger:
  - entity_id: input_select.automation_mode
    platform: state
    to: Away
  condition: []
  action:
  - data:
      entity_id:
      - group.room_living
      - group.room_kitchen
      - group.master_bedroom
      - group.room_master_bathroom
    service: light.turn_off
  - data:
      entity_id: fan.living_room_fan
    entity_id: fan.living_room_fan
    service: fan.turn_off
  - data:
      entity_id: remote.living_room
    entity_id: remote.living_room
    service: remote.turn_off
  - data:
      entity_id: scene.basement_lights_off
    service: scene.turn_on
- id: ecobee_mode_away
  alias: Ecobee Mode Away
  trigger:
  - entity_id: input_select.automation_mode
    for:
      minutes: 90
    platform: state
    to: Away
  condition:
  - condition: and
    conditions:
    - condition: template
      value_template: '{{states.input_select.automation_mode.state != ''No Automation''}}'
    - condition: template
      value_template: '{{states.climate.main_floor.attributes.away_mode == ''off''}}'
  action:
  - data:
      away_mode: 'on'
      entity_id: climate.main_floor
    service: climate.set_away_mode
  - data:
      away_mode: 'on'
      entity_id: climate.basement
    service: climate.set_away_mode
- id: ecobee_mode_home
  alias: Ecobee Mode Home
  trigger:
    platform: state
    entity_id: input_select.automation_mode
    to: Home
  condition:
    condition: and
    conditions:
    - condition: template
      value_template: '{{states.input_select.automation_mode.state != ''No Automation''}}'
    - condition: template
      value_template: '{{states.climate.main_floor.attributes.away_mode == ''on''}}'
  action:
  - service: climate.set_away_mode
    data:
      entity_id: climate.main_floor
      away_mode: 'off'
  - service: climate.set_away_mode
    data:
      entity_id: climate.basement
      away_mode: 'off'
- id: ecobee_mode_home_from_sleep
  alias: Ecobee Mode Home from Sleep
  trigger:
    platform: state
    entity_id: input_select.automation_mode
    from: Sleeping
    to: Home
  condition:
    condition: and
    conditions:
    - condition: template
      value_template: '{{states.input_select.automation_mode.state != ''No Automation''}}'
    - condition: template
      value_template: '{{states.climate.main_floor.attributes.operation_mode == ''heat''
        or states.climate.main_floor.attributes.operation_mode == ''cool''}}'
    - condition: template
      value_template: '{{states.climate.main_floor.attributes.mode != ''Home''}}'
  action:
  - service: climate.set_hold_mode
    data:
      entity_id: climate.main_floor
      hold_mode: home
  - service: climate.set_hold_mode
    data:
      entity_id: climate.basement
      hold_mode: home
- id: ecobee_mode_sleep
  alias: Ecobee Mode Sleep Heat
  trigger:
    platform: state
    entity_id: input_select.automation_mode
    to: Sleeping
  condition:
    condition: and
    conditions:
    - condition: template
      value_template: '{{states.input_select.automation_mode.state != ''No Automation''}}'
    - condition: template
      value_template: '{{states.climate.main_floor.attributes.operation_mode == ''heat''
        or states.climate.main_floor.attributes.operation_mode == ''cool''}}'
    - condition: template
      value_template: '{{states.climate.main_floor.attributes.mode != ''Sleep''}}'
  action:
  - service: climate.set_hold_mode
    data:
      entity_id: climate.main_floor
      hold_mode: sleep
  - service: climate.set_hold_mode
    data:
      entity_id: climate.basement
      hold_mode: sleep
- id: ecobee_basement_exercise_hold_on
  alias: Ecobee Basement Exercise Hold
  trigger:
    platform: state
    entity_id: light.basement_exercise_area_main_lights
    to: 'on'
  condition:
    condition: and
    conditions:
    - condition: template
      value_template: '{{states.input_select.automation_mode.state != ''No Automation''}}'
    - condition: template
      value_template: '{{states.climate.basement.attributes.operation_mode == ''heat''
        or states.climate.basement.attributes.operation_mode == ''cool''}}'
  action:
  - service: climate.set_hold_mode
    data:
      entity_id: climate.basement
      hold_mode: sleep
- id: ecobee_basement_exercise_hold_off
  alias: Ecobee Basement Exercise Hold
  trigger:
    platform: state
    entity_id: light.basement_exercise_area_main_lights
    to: 'off'
  condition:
    condition: and
    conditions:
    - condition: template
      value_template: '{{states.input_select.automation_mode.state != ''No Automation''}}'
    - condition: template
      value_template: '{{states.climate.basement.attributes.operation_mode == ''heat''
        or states.climate.basement.attributes.operation_mode == ''cool''}}'
  action:
  - service: climate.set_hold_mode
    data:
      entity_id: climate.basement
      hold_mode: home
- id: guest_bathroom_fan_timer_start
  alias: guest_bathroom_fan_timer_start
  trigger:
    platform: state
    entity_id: light.guest_bathroom_lights
    to: 'off'
  condition:
    condition: state
    entity_id: switch.guest_bathroom_fan
    state: 'on'
  action:
  - service: timer.start
    entity_id: timer.guest_bathroom_fan_timer1
  - service: timer.cancel
    entity_id: timer.guest_bathroom_fan_timer2
- id: guest_bathroom_fan_timer_backup_start
  alias: guest_bathroom_fan_timer_backup_start
  trigger:
    platform: state
    entity_id: switch.guest_bathroom_fan
    to: 'on'
  action:
    service: timer.start
    entity_id: timer.guest_bathroom_fan_timer2
- id: guest_bathroom_fan_off
  alias: guest_bathroom_fan_off
  trigger:
    platform: state
    entity_id: switch.guest_bathroom_fan
    to: 'off'
  action:
    service: timer.cancel
    entity_id: timer.guest_bathroom_fan_timer1, timer.guest_bathroom_fan_timer2
- id: guest_bathroom_fan_timer_done
  alias: guest_bathroom_fan_timer_done
  trigger:
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.guest_bathroom_fan_timer1
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.guest_bathroom_fan_timer2
  condition:
    condition: state
    entity_id: switch.guest_bathroom_fan
    state: 'on'
  action:
    service: switch.turn_off
    entity_id: switch.guest_bathroom_fan
- id: master_bathroom_fan_timer_start
  alias: master_bathroom_fan_timer_start
  trigger:
  - platform: state
    entity_id: light.master_bathroom_shower
    to: 'off'
  - platform: state
    entity_id: light.master_bathroom_dimmer
    to: 'off'
  condition:
    condition: state
    entity_id: switch.master_bathroom_fan
    state: 'on'
  action:
  - service: timer.start
    entity_id: timer.master_bathroom_fan_timer1
  - service: timer.cancel
    entity_id: timer.master_bathroom_fan_timer2
- id: master_bathroom_fan_timer_backup_start
  alias: master_bathroom_fan_timer_backup_start
  trigger:
    platform: state
    entity_id: switch.master_bathroom_fan
    to: 'on'
  action:
    service: timer.start
    entity_id: timer.master_bathroom_fan_timer2
- id: master_bathroom_fan_off
  alias: master_bathroom_fan_off
  trigger:
    platform: state
    entity_id: switch.master_bathroom_fan
    to: 'off'
  action:
    service: timer.cancel
    entity_id: timer.master_bathroom_fan_timer1, timer.master_bathroom_fan_timer2
- id: master_bathroom_fan_timer_done
  alias: master_bathroom_fan_timer_done
  trigger:
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.master_bathroom_fan_timer1
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.master_bathroom_fan_timer2
  condition:
    condition: state
    entity_id: switch.master_bathroom_fan
    state: 'on'
  action:
    service: switch.turn_off
    entity_id: switch.master_bathroom_fan
- id: bedroom_fan_sleeping
  alias: Bedroom Fan Control Sleeping
  trigger:
    platform: state
    entity_id: input_select.automation_mode
    to: Sleeping
  condition:
    condition: and
    conditions:
    - condition: template
      value_template: '{{states.input_select.automation_mode.state != ''No Automation''}}'
    - condition: template
      value_template: '{{states.climate.main_floor.attributes.current_temperature
        | int > 68 }}'
    - condition: state
      entity_id: fan.master_bedroom_fan
      state: 'off'
  action:
  - service: fan.turn_on
    entity_id: fan.master_bedroom_fan
    data_template:
      speed: '{%- if states.climate.main_floor.attributes.current_temperature > 77
        -%} high {%- elif states.climate.main_floor.attributes.current_temperature
        > 71 -%} medium  {%- elif states.climate.main_floor.attributes.current_temperature
        > 68 -%} low  {%- endif -%}

        '
- id: bedroom_fan_lower_temperature
  alias: Bedroom Fan Lower by Temperature
  trigger:
  - platform: numeric_state
    entity_id: climate.main_floor
    value_template: '{{ states.climate.main_floor.attributes.current_temperature }}'
    below: 77
  - platform: numeric_state
    entity_id: climate.main_floor
    value_template: '{{ states.climate.main_floor.attributes.current_temperature }}'
    below: 71
  condition:
    condition: and
    conditions:
    - condition: template
      value_template: '{{states.input_select.automation_mode.state == ''Sleeping''}}'
    - condition: state
      entity_id: fan.master_bedroom_fan
      state: 'on'
  action:
  - service: fan.set_speed
    entity_id: fan.master_bedroom_fan
    data_template:
      speed: '{%- if states.climate.main_floor.attributes.current_temperature < 71
        -%} low  {%- else -%} medium {%- endif -%}

        '
- id: bedroom_fan_off_temperature
  alias: Bedroom Fan Off by Temperature
  trigger:
  - platform: numeric_state
    entity_id: climate.main_floor
    value_template: '{{ states.climate.main_floor.attributes.current_temperature }}'
    below: 66
  condition:
    condition: and
    conditions:
    - condition: template
      value_template: '{{states.input_select.automation_mode.state == ''Sleeping''}}'
    - condition: state
      entity_id: fan.master_bedroom_fan
      state: 'on'
  action:
  - service: fan.turn_off
    entity_id: fan.master_bedroom_fan
- id: living_room_fan_home
  alias: Living Room Fan Home
  trigger:
    platform: state
    entity_id: input_select.automation_mode
    to: Home
  condition:
    condition: and
    conditions:
    - condition: template
      value_template: '{{states.input_select.automation_mode.state != ''No Automation''}}'
    - condition: template
      value_template: '{{states.climate.main_floor.attributes.current_temperature
        | int > 72}}'
    - condition: state
      entity_id: fan.living_room_fan
      state: 'off'
  action:
  - service: fan.turn_on
    entity_id: fan.living_room_fan
    data_template:
      speed: '{%- if states.climate.main_floor.attributes.current_temperature > 77
        -%} high {%- elif states.climate.main_floor.attributes.current_temperature
        > 75 -%} medium {%- else -%} low {%- endif -%}

        '
- id: living_room_fan_on_temperature
  alias: Living Room Fan on  by Tempearture
  trigger:
  - platform: numeric_state
    entity_id: climate.main_floor
    value_template: '{{ states.climate.main_floor.attributes.current_temperature }}'
    above: 73
  - platform: numeric_state
    entity_id: climate.main_floor
    value_template: '{{ states.climate.main_floor.attributes.current_temperature }}'
    above: 75
  - platform: numeric_state
    entity_id: climate.main_floor
    value_template: '{{ states.climate.main_floor.attributes.current_temperature }}'
    above: 77
  condition:
    condition: and
    conditions:
    - condition: template
      value_template: '{{states.input_select.automation_mode.state == ''Home''}}'
  action:
  - service: fan.turn_on
    entity_id: fan.living_room_fan
    data_template:
      speed: '{%- if states.climate.main_floor.attributes.current_temperature > 77
        -%} medium {%- elif states.climate.main_floor.attributes.current_temperature
        > 75 -%} low {%- elif states.climate.main_floor.attributes.current_temperature
        > 73 -%} low {%- endif -%}

        '
- id: living_room_fan_off_temperature
  alias: Living Room Fan off by Temperature
  trigger:
  - platform: numeric_state
    entity_id: climate.main_floor
    value_template: '{{ states.climate.main_floor.attributes.current_temperature }}'
    below: 73
  - platform: numeric_state
    entity_id: climate.main_floor
    value_template: '{{ states.climate.main_floor.attributes.current_temperature }}'
    below: 75
  - platform: numeric_state
    entity_id: climate.main_floor
    value_template: '{{ states.climate.main_floor.attributes.current_temperature }}'
    below: 77
  condition:
    condition: and
    conditions:
    - condition: template
      value_template: '{{states.input_select.automation_mode.state == ''Home''}}'
  action:
  - service: fan.turn_on
    entity_id: light.living_room_fan
    data_template:
      speed: '{%- if states.climate.main_floor.attributes.current_temperature < 73
        -%} low {%- elif states.climate.main_floor.attributes.current_temperature
        < 75 -%} low {%- elif states.climate.main_floor.attributes.current_temperature
        < 77 -%} medium {%- endif -%}

        '
- id: fireplace_hot_off
  alias: Fireplace off when hot
  trigger:
    platform: state
    entity_id: binary_sensor.fireplace_off_sensor
    to: 'on'
  condition:
    condition: and
    conditions:
    - condition: template
      value_template: '{{ states.input_select.automation_mode.state != ''No Automation''}}'
    - condition: state
      entity_id: input_boolean.fireplace_automation
      state: 'on'
    - condition: state
      entity_id: switch.fireplace
      state: 'on'
  action:
  - service: switch.turn_off
    data:
      entity_id: switch.fireplace
- id: furnace_fan_on_when_fireplace_on
  alias: Furnace fan on when fireplace on
  trigger:
    platform: state
    entity_id: switch.fireplace
    to: 'on'
  condition:
    condition: and
    conditions:
    - condition: template
      value_template: '{{ states.input_select.automation_mode.state != ''No Automation''}}'
  action:
  - service: climate.ecobee_set_fan_min_on_time
    data:
      entity_id: climate.main_floor
      fan_min_on_time: 60
- id: furnace_fan_off_when_fireplace_off
  alias: Furnace fan off when fireplace off
  trigger:
    platform: state
    entity_id: switch.fireplace
    to: 'off'
  condition:
    condition: and
    conditions:
    - condition: template
      value_template: '{{ states.input_select.automation_mode.state != ''No Automation''}}'
  action:
  - service: climate.ecobee_set_fan_min_on_time
    data:
      entity_id: climate.main_floor
      fan_min_on_time: 0
- id: lights_auto_on from binary sensor
  alias: lights_auto_on from indoor_lights_binary_sensor
  trigger:
  - entity_id: binary_sensor.indoor_lights_auto_on
    platform: state
    to: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.lux_light_control
    state: 'on'
  action:
  - service: script.lights_main_on
  - data:
      log_name: lights_auto_on
    service: script.log_lux_levels
- id: lights_auto_off from binary sensor
  alias: lights_auto_off from indoor_lights_binary_sensor
  trigger:
  - entity_id: binary_sensor.indoor_lights_auto_on
    platform: state
    to: 'off'
  condition:
  - condition: state
    entity_id: input_boolean.lux_light_control
    state: 'on'
  action:
  - service: script.lights_upstairs_off
  - data:
      log_name: lights_auto_off
    service: script.log_lux_levels
- id: ambiience_lights_on
  alias: Ambience Lights - on
  trigger:
  - event: sunset
    offset: 00:15:00
    platform: sun
  - entity_id: input_select.automation_mode
    platform: state
    to: Home
  condition:
  - condition: state
    entity_id: input_select.automation_mode
    state: Home
  action:
  - data:
      entity_id: light.kitchen_cabinet_lights
    service: light.turn_on
  - data:
      brightness: 50
      entity_id: light.master_bathroom_chandelier
    service: light.turn_on
  - data:
      brightness: 50
      entity_id: light.upstairs_hall_scone
    service: light.turn_on
  - data:
      brightness: 50
      entity_id: light.stairs_main_lights
    service: light.turn_on
- id: master_bath_lights_on_from_fan
  alias: Master bath lights on from fan
  trigger:
    platform: state
    entity_id: switch.master_bathroom_fan
    to: 'on'
  action:
    service: light.turn_on
    data:
      entity_id: light.master_bathroom_shower
- id: basement_lights_mode_from_tv
  alias: Basement Lights to Movie Scene from Samsung TV Remote on
  trigger:
  - entity_id: media_player.samsung_tv_remote
    platform: state
    to: 'on'
  action:
  - data:
      entity_id: scene.movie_lighting
    entity_id: scene.movie_lighting
    service: scene.turn_on
- id: basement_stairs_motion_on
  alias: Basement Stairs Lights on from Stairs Motion
  trigger:
  - entity_id: binary_sensor.stairs_motion
    platform: state
    to: 'on'
  condition:
  - condition: state
    entity_id: light.stairs_main_lights
    state: 'off'
  action:
  - data:
      entity_id: light.stairs_main_lights
    service: light.turn_on
  - data:
      entity_id: timer.stairs
    service: timer.start
  - data:
      entity_id: scene.entertaining
    service: scene.turn_on
- id: basement_stairs_lights_off_from_timer
  alias: Basement Stairs Motion Timer Finished
  trigger:
  - event_data:
      entity_id: timer.stairs
    event_type: timer.finished
    platform: event
  condition:
  - condition: and
    conditions:
    - condition: template
      value_template: '{{ states.input_select.automation_mode.state != ''No Automation''}}'
    - condition: state
      entity_id: light.stairs_main_lights
      state: 'on'
    - condition: state
      entity_id: media_player.samsung_tv_remote
      state: 'off'
    - condition: state
      entity_id: binary_sensor.basement_occupancy
      state: 'off'
    - condition: state
      entity_id: light.basement_exercise_area_main_lights
      state: 'off'
  action:
  - data:
      entity_id: scene.basement_lights_off
    service: scene.turn_on
- id: lights_sun_off
  alias: Lights off when sun rises
  trigger:
  - above: '-5'
    entity_id: sun.sun
    platform: numeric_state
    value_template: '{{ state.attributes.elevation }}'
  action:
  - data:
      entity_id:
      - group.outside_lights
      - light.upstairs_hall_scone
    service: light.turn_off
- id: lights_sun_on
  alias: Lights outside sunset turn on
  trigger:
  - event: sunset
    platform: sun
  action:
  - data: {}
    service: script.1546906415963
- id: denon_slider_volume_set
  alias: Denon - Set Slider to Volume
  trigger:
  - platform: state
    entity_id: media_player.denon_avrx3000
  - platform: state
    entity_id: remote.living_room
  condition:
    condition: template
    value_template: '{% if states.media_player.denon_avrx3000.attributes.volume_level
      %} {{ (states.media_player.denon_avrx3000.attributes.volume_level | float) !=
      (states.input_number.denon_volume.state | float) }} {% else %} False {% endif
      %}'
  action:
    service: input_number.set_value
    data_template:
      entity_id: input_number.denon_volume
      value: '{{ states.media_player.denon_avrx3000.attributes.volume_level | float
        * 100 }}

        '
- id: denon_volume_set
  alias: Denon set volume
  trigger:
    platform: state
    entity_id: input_number.denon_volume
  condition:
    condition: and
    conditions:
    - condition: template
      value_template: '{{states.input_select.automation_mode.state != ''No Automation''}}'
    - condition: template
      value_template: '{% if states.media_player.denon_avrx3000.attributes.volume_level
        %} {{(trigger.to_state.state | float / 100) != (states.media_player.denon_avrx3000.attributes.volume_level
        | float) }} {% else %} False {% endif %}'
  action:
    service: media_player.volume_set
    data_template:
      entity_id: media_player.denon_avrx3000
      volume_level: '{{ trigger.to_state.state | float / 100 }}'
- id: denon_deck_volume_set
  alias: Denon deck volume set
  trigger:
    platform: state
    entity_id: input_number.denon_deck_volume
  action:
    service: rest_command.denon_deck_volume_set
- id: harmony_input_change
  alias: Send Harmony comand when input select changes
  trigger:
    platform: state
    entity_id: input_select.living_room_remote
  condition:
    condition: and
    conditions:
    - condition: template
      value_template: '{{states.input_select.automation_mode.state != ''No Automation''}}'
    - condition: template
      value_template: '{{states.input_select.living_room_remote.state != states.remote.living_room.attributes.current_activity
        }}'
  action:
    service: remote.turn_on
    data_template:
      entity_id: remote.living_room
      activity: "{% if trigger.to_state.state == \"Watch TV\" %}\n  19927261 \n{%\
        \ elif  trigger.to_state.state == \"Watch TV / No Stereo\" %}\n  19925437\
        \        \n{% elif  trigger.to_state.state == \"Watch Netflix\" %}\n  19933436\n\
        {% elif  trigger.to_state.state == \"Watch Blu-Ray\" %}\n  19925431\n{% elif\
        \  trigger.to_state.state == \"PowerOff\" %}\n  -1\n{% elif  trigger.to_state.state\
        \ == \"Music - cable - deck\" %}\n  19926657\n{% elif  trigger.to_state.state\
        \ == \"Music - cable\" %}\n  19926777\n{% elif  trigger.to_state.state ==\
        \ \"Apple TV\" %}\n  19928494\n{% elif  trigger.to_state.state == \"Apple\
        \ TV - Deck\" %}\n  19955801\n{% endif %}\n"
- id: harmony_remote_change
  alias: Set Harmony input select when remote activity
  trigger:
    platform: state
    entity_id: remote.living_room
  condition:
    condition: template
    value_template: '{{ trigger.to_state.attributes.current_activity != states.input_select.living_room_remote.state
      }}'
  action:
  - service: input_select.select_option
    data_template:
      entity_id: input_select.living_room_remote
      option: '{{ states.remote.living_room.attributes.current_activity }}'
  - service: input_number.set_value
    data_template:
      entity_id: input_number.denon_volume
      value: "\"{% if states.media_player.denon_avrx3000.attributes.volume_level %}\n\
        \ {{ states.media_player.denon_avrx3000.attributes.volume_level | float }}\n\
        \          {% else %}\n          20 | float\n          {% endif %}\"\n"
- id: '1546087730763'
  alias: Basement Stairs Motion Test
  trigger:
  - entity_id: binary_sensor.stairs_motion
    platform: state
    to: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.stairs_motion_test
    state: 'on'
  action:
  - data:
      entity_id: light.basement_game_area_main_lights
    service: light.toggle
  - delay: '2'
  - data:
      entity_id: light.basement_game_area_main_lights
    service: light.toggle
- id: '1546271721605'
  alias: Basement Lights on from Stairs Motion
  trigger:
  - entity_id: binary_sensor.stairs_motion
    platform: state
    to: 'on'
  condition:
  - condition: state
    entity_id: light.bar_sink_light
    state: 'off'
  action:
  - data:
      entity_id: scene.entertaining
    service: scene.turn_on
- id: '1546695407320'
  alias: device tracker phil home
  trigger:
  - entity_id: device_tracker.phils_7
    platform: state
    to: home
  - entity_id: input_boolean.phil_homekit_present
    platform: state
    to: 'on'
  - entity_id: device_tracker.phil_smartthings
    platform: state
    to: home
  condition: []
  action:
  - data:
      entity_id: input_boolean.device_tracker_phil_home
    service: input_boolean.turn_on
- id: '1546695504577'
  alias: device tracker phil away
  trigger:
  - entity_id: device_tracker.phils_7
    for: 00:01:00
    platform: state
    to: not_home
  - entity_id: input_boolean.phil_homekit_present
    for: 00:01:00
    platform: state
    to: 'off'
  - entity_id: device_tracker.phil_smartthings
    for: 00:01:00
    platform: state
    to: not_home
  condition: []
  action:
  - alias: ''
    data:
      entity_id: input_boolean.device_tracker_phil_home
    service: input_boolean.turn_off
- id: '1546695633187'
  alias: device tracker nikki home
  trigger:
  - entity_id: device_tracker.nikkis_iphone
    platform: state
    to: home
  - entity_id: input_boolean.nikki_homekit_present
    platform: state
    to: 'on'
  - entity_id: device_tracker.nikki_smartthings
    platform: state
    to: home
  condition: []
  action:
  - data:
      entity_id: input_boolean.device_tracker_nikki_home
    service: input_boolean.turn_on
- id: '1546695777716'
  alias: device tracker nikki away
  trigger:
  - entity_id: device_tracker.nikkis_iphone
    for: 00:01:00
    platform: state
    to: not_home
  - entity_id: input_boolean.nikki_homekit_present
    for: 00:01:00
    platform: state
    to: 'off'
  - entity_id: device_tracker.nikki_smartthings
    for: 00:01:00
    platform: state
    to: not_home
  condition: []
  action:
  - data:
      entity_id: input_boolean.device_tracker_nikki_home
    service: input_boolean.turn_off
- id: '1546696475350'
  alias: device tracker trigger home mode
  trigger:
  - entity_id: input_boolean.device_tracker_phil_home
    platform: state
    to: 'on'
  - entity_id: input_boolean.device_tracker_nikki_home
    platform: state
    to: 'on'
  condition:
  - condition: state
    entity_id: input_select.automation_mode
    state: Away
  action:
  - data:
      entity_id: input_select.automation_mode
      option: Home
    service: input_select.select_option
- id: '1546696585128'
  alias: device tracker trigger away mode
  trigger:
  - entity_id: input_boolean.device_tracker_phil_home
    platform: state
    to: 'off'
  - entity_id: input_boolean.device_tracker_nikki_home
    platform: state
    to: 'off'
  condition:
  - condition: state
    entity_id: input_boolean.device_tracker_phil_home
    state: 'off'
  - condition: state
    entity_id: input_boolean.device_tracker_nikki_home
    state: 'off'
  action:
  - data:
      entity_id: input_select.automation_mode
      option: Away
    service: input_select.set_options
