# Automation.yaml

############################
#                          #
#    Alerts                #
#                          #
############################

 
- id: doors_check_status
  alias: Alert for open doors when mode changes
  trigger:
    - platform: state
      entity_id: input_select.automation_mode
      to: 'Sleeping'
    - platform: state
      entity_id: input_select.automation_mode
      to: 'Away'
  condition:
    condition: or
    conditions:
      - condition: state
        entity_id: sensor.garage_service_door
        state: 'open'
      - condition: state
        entity_id: cover.garage_right
        state: 'open'
      - condition: state
        entity_id: cover.garage_left
        state: 'open'
  action:
    service: notify.twilio_sms
    data:
      message: 'Sleep or Away mode set but doors still open!'
      target:
        !secret myphone


- id: doors_open_status
  alias: Alert for open doors when sleeping or away
  trigger:
    - platform: state
      entity_id: sensor.garage_service_door
      to: 'open'
    - platform: state
      entity_id: cover.garage_door_right
      to: 'open'
    - platform: state
      entity_id: cover.garage_door_left
      to: 'open'
  condition:
    condition: or
    conditions:
      - condition: state
        entity_id: input_select.automation_mode
        state: 'Sleeping'
      - condition: state
        entity_id: input_select.automation_mode
        state: 'Away'
  action:
    service: notify.twilio_sms
    data:
      message: "Door opened while mode was sleeping or away"
      target: 
        !secret myphone


############################
#                          #
#  Automation Mode - Set   #
#                          #
############################


- id: automation_mode_home_from_harmony
  alias: 'Activity with Remote - Set mode to Home'
  trigger:
    platform: state
    entity_id: remote.living_room
  condition: 
    condition: and
    conditions:
      - condition: template
        value_template: "{{states.input_select.automation_mode.state != 'No Automation' }}" 
      - condition: template
        value_template: "{{ trigger.to_state.attributes.current_activity != 'PowerOff' }}"
      - condition: template
        value_template: "{{ states.input_select.automation_mode.state != 'Home' }}" 
  action:
    service: input_select.select_option
    data:
      entity_id: input_select.automation_mode 
      option: 'Home'

- id: automation_mode_sleeping_from_harmony
  alias: 'Activity with remote - Set automation to sleeping'
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: remote.living_room
  condition: 
    condition: and
    conditions:
      - condition: template
        value_template: "{{states.input_select.automation_mode.state != 'No Automation' }}"
      - condition: template
        value_template: "{{trigger.to_state.attributes.current_activity == 'PowerOff' }}"
      - condition: template
        value_template: "{{states.device_tracker.nikki.state == 'present' or states.device_tracker.phil.state == 'present' }}"
      - condition: time
        after: '20:00:00'
  action:
    service: input_select.select_option
    data:
      entity_id: input_select.automation_mode
      option: 'Sleeping'


- id: automation_mode_home_from_homekit
  alias: Automation mode to home from homekit
  trigger:
    platform: state
    entity_id: input_boolean.set_mode_home
    to: 'on'
  condition:
    condition: and
    conditions:
      condition: template
      value_template: "{{states.input_select.automation_mode.state != 'No Automation'}}"
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.automation_mode
        option: 'Home'
    - delay: '00:00:02'
    - service: input_boolean.turn_off
      data: 
        entity_id: input_boolean.set_mode_home


- id: automation_mode_sleeping_from_homekit
  alias: Automation mode to sleeping from homekit
  trigger:
    platform: state
    entity_id: input_boolean.set_mode_sleeping
    to: 'on'
  condition:
    condition: and
    conditions:
      condition: template
      value_template: "{{states.input_select.automation_mode.state != 'No Automation' }}"
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.automation_mode
        option: 'Sleeping'
    - delay: '00:00:02'
    - service: input_boolean.turn_off
      data: 
        entity_id: input_boolean.set_mode_sleeping



- id: automation_mode_away_from_homekit
  alias: Input Boolean Set away from Im leaving
  trigger:
    platform: state
    entity_id: input_boolean.set_mode_away
    to: 'on'
  condition:
    condition: and
    conditions:
      condition: template
      value_template: "{{states.input_select.automation_mode.state != 'No Automation' }}"
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.automation_mode
        option: 'Away'
    - delay: '00:00:02'
    - service: input_boolean.turn_off
      data: 
        entity_id: input_boolean.set_mode_away


- id: automation_mode_home_from_ecobee
  alias: automation mode set to home from ecobee activity
  trigger:
    platform: state
    entity_id: binary_sensor.main_floor_occupancy
    to: 'on'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{states.input_select.automation_mode.state != 'No Automation' }}"
      - condition: template
        value_template: "{{states.input_select.automation_mode.state == 'Sleeping' }}"
      - condition: time
        after: '06:00:00'
        before: '20:00:00'
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.automation_mode
        option: 'Home'


############################
#                          #
# Automation Mode - Do     #
#                          #
############################


- id: automation_mode_sleeping
  alias: Mode Sleep
  trigger:
    platform: state
    entity_id: input_select.automation_mode
    to: 'Sleeping'
  condition:
    condition: and
    conditions:
      condition: template
      value_template: "{{states.input_select.automation_mode.state != 'No Automation'}}"
  action:
    - service: light.turn_off
      data:
        entity_id:
        - group.room_living
        - group.room_kitchen
    - service: remote.turn_off
      entity_id: remote.living_room


- id: automation_mode_away
  alias: Mode Away
  trigger:
    platform: state
    entity_id: input_select.automation_mode
    to: 'Away'
  condition:
    condition: and
    conditions:
      condition: template
      value_template: "{{states.input_select.automation_mode.state != 'No Automation'}}"
  action:
    - service: light.turn_off
      data:
        entity_id:
        - group.room_living
        - group.room_kitchen
        #- group.room_guest_bathroom leaving out because Dylan's not in home/away detection
        - group.room_master_bathroom
    - service: remote.turn_off
      entity_id: remote.living_room


############################
#                          #
#    Bathroom Fans         #
#                          #
############################

# Timer 1 - main timer
# Timer 2 - backup timer

# Guest Bath
#
- id: guest_bathroom_fan_timer_start
  alias: guest_bathroom_fan_timer_start
  trigger:
    platform: state
    entity_id: light.guest_bathroom_lights
    to: "off"
  condition:
    condition: state
    entity_id: switch.guest_bathroom_fan
    state: "on"
  action:
    - service: timer.start
      entity_id: timer.guest_bathroom_fan_timer1
    - service: timer.cancel
      entity_id: timer.guest_bathroom_fan_timer2

- id: guest_bathroom_fan_timer_backup_start
  alias: guest_bathroom_fan_timer_backup_start
  trigger:
    platform: state
    entity_id: switch.guest_bathroom_fan
    to: "on"
  action:
    service: timer.start
    entity_id: timer.guest_bathroom_fan_timer2

- id: guest_bathroom_fan_off
  alias: guest_bathroom_fan_off
  trigger:
    platform: state
    entity_id: switch.guest_bathroom_fan
    to: "off"
  action:
    service: timer.cancel
    entity_id: timer.guest_bathroom_fan_timer1, timer.guest_bathroom_fan_timer2

- id: guest_bathroom_fan_timer_done
  alias: guest_bathroom_fan_timer_done
  trigger:
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.guest_bathroom_fan_timer1
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.guest_bathroom_fan_timer2
  condition:
    condition: state
    entity_id: switch.guest_bathroom_fan
    state: "on"
  action:
    service: switch.turn_off
    entity_id: switch.guest_bathroom_fan

# Master Bath
- id: master_bathroom_fan_timer_start
  alias: master_bathroom_fan_timer_start
  trigger:
    - platform: state
      entity_id: light.master_bathroom_shower
      to: "off"
    - platform: state
      entity_id: light.master_bathroom_dimmer
      to: "off"
  condition:
    condition: state
    entity_id: switch.master_bathroom_fan
    state: "on"
  action:
    - service: timer.start
      entity_id: timer.master_bathroom_fan_timer1
    - service: timer.cancel
      entity_id: timer.master_bathroom_fan_timer2

- id: master_bathroom_fan_timer_backup_start
  alias: master_bathroom_fan_timer_backup_start
  trigger:
    platform: state
    entity_id: switch.master_bathroom_fan
    to: "on"
  action:
    service: timer.start
    entity_id: timer.master_bathroom_fan_timer2

- id: master_bathroom_fan_off
  alias: master_bathroom_fan_off
  trigger:
    platform: state
    entity_id: switch.master_bathroom_fan
    to: "off"
  action:
    service: timer.cancel
    entity_id: timer.master_bathroom_fan_timer1, timer.master_bathroom_fan_timer2

- id: master_bathroom_fan_timer_done
  alias: master_bathroom_fan_timer_done
  trigger:
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.master_bathroom_fan_timer1
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.master_bathroom_fan_timer2
  condition:
    condition: state
    entity_id: switch.master_bathroom_fan
    state: "on"
  action:
    service: switch.turn_off
    entity_id: switch.master_bathroom_fan


############################
#                          #
#    Device Tracker        #
#                          #
############################


- id: device_tracker_change
  alias: Device tracker change
  trigger:
    platform: state
    entity_id: device_tracker.phil,device_tracker.nikki
  condition:
    condition: or
    conditions:
      - condition: state
        entity_id: input_select.automation_mode 
        state: 'Away'
      - condition: state
        entity_id: input_select.automation_mode 
        state: 'Home'
  action:
    service: input_select.select_option
    data_template:
      entity_id: input_select.automation_mode
      option: >
        {%if states.device_tracker.phil.state == 'present' or states.device_tracker.nikki.state == 'present' %}Home{% else %}Away{% endif %}


############################
#                          #
#    Ecobee Automation     #
#                          #
############################


- id: ecobee_mode_away
  alias: Ecobee Mode Away
  trigger:
    platform: state
    entity_id: input_select.automation_mode
    to: 'Away'
    for:
      minutes: 90
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{states.input_select.automation_mode.state != 'No Automation'}}"
      - condition: template
        value_template: "{{states.climate.main_floor.attributes.away_mode == 'off'}}"
  action:
    service: climate.set_away_mode
    data:
      entity_id: climate.main_floor
      away_mode: 'on' 


- id: ecobee_mode_home
  alias: Ecobee Mode Home
  trigger:
    platform: state
    entity_id: input_select.automation_mode
    to: 'Home'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{states.input_select.automation_mode.state != 'No Automation'}}"
      - condition: template
        value_template: "{{states.climate.main_floor.attributes.away_mode == 'on'}}"
  action:
    service: climate.set_away_mode
    data:
      entity_id: climate.main_floor
      away_mode: 'off' 


- id: ecobee_mode_home_from_sleep_heat
  alias: Ecobee Mode Home from Sleep Heat
  trigger:
    platform: state
    entity_id: input_select.automation_mode
    from: 'Sleeping'
    to: 'Home'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{states.input_select.automation_mode.state != 'No Automation'}}"
      - condition: template
        value_template: "{{states.climate.main_floor.attributes.operation_mode == 'heat'}}"
      - condition: template
        value_template: "{{states.climate.main_floor.attributes.mode != 'Home'}}"
  action:
    service: climate.set_hold_mode
    data:
      entity_id: climate.main_floor
      hold_mode: 'home'
#    service: climate.set_temperature
#    data:
#      entity_id: climate.main_floor
#      temperature: 70


- id: ecobee_mode_sleep_heat
  alias: Ecobee Mode Sleep Heat
  trigger:
    platform: state
    entity_id: input_select.automation_mode
    to: 'Sleeping'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{states.input_select.automation_mode.state != 'No Automation'}}"
      - condition: template
        value_template: "{{states.climate.main_floor.attributes.operation_mode == 'heat'}}"
      - condition: template
        value_template: "{{states.climate.main_floor.attributes.mode != 'Sleep'}}"
  action:
    service: climate.set_hold_mode
    data:
      entity_id: climate.main_floor
      hold_mode: 'sleep'


############################
#                          #
#    Fireplace             #
#                          #
############################
  
- id: fireplace_hot_off
  alias: "Fireplace off when hot"
  trigger:
    platform: state
    entity_id: binary_sensor.fireplace_off_sensor
    to: "on"
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ states.input_select.automation_mode.state != 'No Automation'}}"
      - condition: state
        entity_id: input_boolean.fireplace_automation 
        state: 'on'
      - condition: state
        entity_id: switch.fireplace
        state: "on"
  action:
    - service: switch.turn_off
      data:
        entity_id: switch.fireplace

- id: furnace_fan_on_when_fireplace_on
  alias: "Furnace fan on when fireplace on"
  trigger:
    platform: state
    entity_id: switch.fireplace
    to: "on"
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ states.input_select.automation_mode.state != 'No Automation'}}"
  action:
    - service: climate.ecobee_set_fan_min_on_time
      data:
        entity_id: climate.main_floor
        fan_min_on_time: 60

- id: furnace_fan_off_when_fireplace_off
  alias: "Furnace fan on when fireplace on"
  trigger:
    platform: state
    entity_id: switch.fireplace
    to: "off"
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ states.input_select.automation_mode.state != 'No Automation'}}"
  action:
    - service: climate.ecobee_set_fan_min_on_time
      data:
        entity_id: climate.main_floor
        fan_min_on_time: 0


############################
#                          #
#    Lights - Inside       #
#                          #
############################

- id: lights_auto_on from binary sensor
  alias: lights_auto_on from binary sensor
  trigger:
    - platform: state
      entity_id: binary_sensor.indoor_lights_auto_on
      to: 'on'
  condition:
    condition: state
    entity_id: input_boolean.lux_light_control
    state: 'on'
  action:
    - service: light.turn_on
      data:
        entity_id:
        - group.room_living
    - service: light.turn_on
      data:
        entity_id: light.kitchen_island_lights

- id: lights_auto_off from binary sensor
  alias: lights_auto_off from binary sensor
  trigger:
    - platform: state
      entity_id: binary_sensor.indoor_lights_auto_on
      to: 'off'
  condition:
    condition: state
    entity_id: input_boolean.lux_light_control
    state: 'on'
  action:
    - service: script.lights_all_off


- id: ambiience_lights_on
  alias: Ambience Lights - on
  trigger:
    - platform: sun
      event: sunset
      offset: '00:15:00'
    - platform: state
      entity_id: input_select.automation_mode
      to: 'Home'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_select.automation_mode
        state: 'Home'
      - condition: sun
        after: sunset
        after_offset: '00:15:00'
  action:
    - service: light.turn_on
      data:
        entity_id: light.kitchen_cabinet_lights
    - service: light.turn_on
      data:
        entity_id: light.master_bathroom_chandelier
        brightness: 50
    - service: light.turn_on
      data:
        entity_id: light.upstairs_hall_scone
        brightness: 50


# Master Bath Lights
- id: master_bath_lights_on_from_fan
  alias: Master bath lights on from fan
  trigger:
    platform: state
    entity_id: switch.master_bathroom_fan
    to: 'on'
  action:
    service: light.turn_on
    data:
      entity_id: light.master_bathroom_shower


############################
#                          #
#    Lights - Outside      #
#                          #
############################


- id: lights_sun_off
  alias: Turn lights off when sun rises
  trigger:
    platform: numeric_state
    entity_id: sun.sun
    value_template: '{{ state.attributes.elevation }}'
    above: -5.0
  action:
    - service: light.turn_off
      data:
        entity_id:
        - group.outside_lights
        - light.upstairs_hall_scone


- id: lights_sun_on
  alias: Lights outside sunset turn on
  trigger:
    platform : sun
    event: sunset
  action:
    - service: light.turn_on
      data:
        entity_id: light.entry_walkway_dimmer_switch
        # Value sent to mqtt is .38 of value set here.
        # For 0 - 100, use 0 - 263 here
        # 100 set = 38% to smarthings
        # 131 set = 50% to smarthings
        # 263 set = 100% to smarthings
        brightness: 50
    - service: light.turn_on
      data:
        entity_id: light.garage_outside_lights
        brightness: 70


############################
#                          #
#    Media Control         #
#                          #
############################


- id: denon_slider_volume_set
  alias: Denon - Set Slider to Volume
  trigger:
    - platform: state
      entity_id: media_player.denon_avrx3000
    - platform: state
      entity_id: remote.living_room 
  condition:
    condition: template
    value_template: "{% if states.media_player.denon_avrx3000.attributes.volume_level %}
                    {{ (states.media_player.denon_avrx3000.attributes.volume_level | float) != (states.input_number.denon_volume.state | float) }}
                    {% else %}
                    False
                    {% endif %}"
  action:
    service: input_number.set_value
    data_template:
      entity_id: input_number.denon_volume
      value: > 
        {{ states.media_player.denon_avrx3000.attributes.volume_level | float * 100 }}

 
- id: denon_volume_set
  alias: Denon set volume
  trigger:
    platform: state
    entity_id: input_number.denon_volume
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{states.input_select.automation_mode.state != 'No Automation'}}"
      - condition: template
        value_template: "{% if states.media_player.denon_avrx3000.attributes.volume_level %}
                        {{(trigger.to_state.state | float / 100) != (states.media_player.denon_avrx3000.attributes.volume_level | float) }}
                        {% else %}
                        False
                        {% endif %}"
  action:
    service: media_player.volume_set
    data_template:
      entity_id: media_player.denon_avrx3000
      volume_level: "{{ trigger.to_state.state | float / 100 }}"


- id: denon_deck_volume_set
  alias: Denon deck volume set
  trigger:
    platform: state
    entity_id: input_number.denon_deck_volume
  action:
    service: rest_command.denon_deck_volume_set

############################
#                          #
#    Router Calculation    #
#                          #
############################

#- id: monitor_in_traffic
#  alias: Monitor In Traffic
#  trigger:
#    platform: state
#    entity_id: sensor.snmp_wan_in
#  action:
#    - service: input_number.set_value
#      data_template:
#        entity_id: input_number.internet_traffic_delta_in
#        #value: '{{ ((trigger.to_state.state | int - trigger.from_state.state | int) * 8 ) / ( as_timestamp(trigger.to_state.last_updated) - as_timestamp(trigger.from_state.last_updated) ) }}'
#        value: '{{ ((trigger.to_state.state | int - trigger.from_state.state | int) * 8 / 1048576 ) / ( as_timestamp(trigger.to_state.last_updated) - as_timestamp(trigger.from_state.last_updated) ) }}'
#
#- id: monitor_out_traffic
#  alias: Monitor Out Traffic
#  trigger:
#    platform: state
#    entity_id: sensor.snmp_wan_out
#  action:
#    - service: input_number.set_value
#      data_template:
#        entity_id: input_number.internet_traffic_delta_out
#        #value: '{{ ((trigger.to_state.state | int - trigger.from_state.state | int) * 8 ) / ( as_timestamp(trigger.to_state.last_updated) - as_timestamp(trigger.from_state.last_updated) ) }}'
#        value: '{{ ((trigger.to_state.state | int - trigger.from_state.state | int) * 8 / 1048576 ) / ( as_timestamp(trigger.to_state.last_updated) - as_timestamp(trigger.from_state.last_updated) ) }}'


############################
#                          #
#    Harmony Activity      #
#                          #
############################


- id: harmony_input_change
  alias: 'Send Harmony comand when input select changes'
  trigger:
    platform: state
    entity_id: input_select.living_room_remote
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{states.input_select.automation_mode.state != 'No Automation'}}"
      - condition: template
        value_template: '{{states.input_select.living_room_remote.state != states.remote.living_room.attributes.current_activity }}'
  action:
    service: remote.turn_on
    data_template:
      entity_id: remote.living_room
      activity: >
        {% if trigger.to_state.state == "Watch TV" %}
          19927261 
        {% elif  trigger.to_state.state == "Watch TV / No Stereo" %}
          19925437        
        {% elif  trigger.to_state.state == "Watch Netflix" %}
          19933436
        {% elif  trigger.to_state.state == "Watch Blu-Ray" %}
          19925431
        {% elif  trigger.to_state.state == "PowerOff" %}
          -1
        {% elif  trigger.to_state.state == "Music - cable - deck" %}
          19926657
        {% elif  trigger.to_state.state == "Music - cable" %}
          19926777
        {% elif  trigger.to_state.state == "Apple TV" %}
          19928494
        {% elif  trigger.to_state.state == "Apple TV - Deck" %}
          19955801
        {% endif %}


- id: harmony_remote_change
  alias: "Set Harmony input select when remote activity"
  trigger:
    platform: state
    entity_id: remote.living_room
  condition:
    condition: template
    value_template: "{{ trigger.to_state.attributes.current_activity != states.input_select.living_room_remote.state }}"
  action:
    - service: input_select.select_option
      data_template:
        entity_id: input_select.living_room_remote
        option: "{{ states.remote.living_room.attributes.current_activity }}"
    - service: input_number.set_value
      data_template:
        entity_id: input_number.denon_volume
        value: >
          "{% if states.media_player.denon_avrx3000.attributes.volume_level %}
           {{ states.media_player.denon_avrx3000.attributes.volume_level | float }}
                    {% else %}
                    20 | float
                    {% endif %}"
